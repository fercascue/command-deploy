name: release-please
on:
  push:
    branches:
      - mainer
permissions:
    contents: write
    pull-requests: write
jobs:
    release-please:
      runs-on: ubuntu-latest
      outputs:
        TARGET_ENV: ${{steps.release.outputs.pr}}
      steps:
        - uses: google-github-actions/release-please-action@v4
          id: release
          with:
            # this assumes that you have created a personal access token
            # (PAT) and configured it as a GitHub action secret named
            # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
            #token: ${{ secrets.PAT }}
            # this is a built-in strategy in release-please, see "Action Inputs"
            # for more options
            release-type: maven
    triage: 
        needs: release-please
        runs-on: ubuntu-latest
        if: ${{ needs.release-please.outputs.TARGET_ENV != null }}
        permissions:
            contents: read
            pull-requests: write
        env:
            GH_TOKEN: ${{ secrets.PAT }}    
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:  
                token: ${{ secrets.PAT }}
            - name: Merge PR
              run: | 
               echo ${{ fromJson(needs.release-please.outputs.TARGET_ENV).number }}     
               gh pr merge ${{ fromJson(needs.release-please.outputs.TARGET_ENV).number}} --auto --merge
    develop: 
        needs: release-please
        runs-on: ubuntu-latest
        if: ${{ needs.release-please.outputs.TARGET_ENV == null }} 
        #env:
          #GH_TOKEN: ${{ secrets.PAT }}  
        steps:
          - uses: actions/checkout@v4
            with:
              ref: develop
          - name: Reset promotion branch
            run: |
              git fetch origin main:main
              git reset --hard main
          - name: Create Pull Request
            id: cprdev
            uses: peter-evans/create-pull-request@v4
            with:
              #token: ${{ secrets.PAT}}
              branch: feature/promotion  
              title: 'feat: recreate stage'
              labels: |
                  develop
                  automated pr
              body: |
                 Hi!
                 
                 This PR was created in response workflow running to release.
          - name: Check outputs
            if: ${{ steps.cprdev.outputs.pull-request-number }}
            run: |
              echo "Pull Request Number - ${{ steps.cprdev.outputs.pull-request-number }}"
          - name: Create pr comment for lint 
            uses: peter-evans/create-or-update-comment@v2
            id: create-comment
            with:
              token: ${{ secrets.PAT}}
              issue-number:  ${{ steps.cprdev.outputs.pull-request-number }}
              body: |
                .deploy staging    
          - name: DIFF
            run:  |
               git fetch origin develop
               gh pr merge ${{ steps.cprdev.outputs.pull-request-number}} --auto --merge
            env:
                GH_TOKEN: ${{ secrets.PAT }}
          - name: Delete branches
            run: |
              git push origin --delete release-please--branches--main      