name: release-please
on:
  push:
    branches:
      - main
permissions:
    contents: write
    pull-requests: write
jobs:
    release-please:
      runs-on: ubuntu-latest
      outputs:
        TARGET_ENV: ${{steps.release.outputs.pr}}
      steps:
        - uses: google-github-actions/release-please-action@v4
          id: release
          with:
            # this assumes that you have created a personal access token
            # (PAT) and configured it as a GitHub action secret named
            # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
            #token: ${{ secrets.PAT }}
            # this is a built-in strategy in release-please, see "Action Inputs"
            # for more options
            release-type: maven
    triage: 
        needs: release-please
        runs-on: ubuntu-latest
        if: ${{ needs.release-please.outputs.TARGET_ENV != null }}
        permissions:
            contents: read
            pull-requests: write
        env:
            GH_TOKEN: ${{ secrets.PAT }}    
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:  
                token: ${{ secrets.PAT }}
            - name: Merge PR
              run: | 
               echo ${{ fromJson(needs.release-please.outputs.TARGET_ENV).number }}     
               gh pr merge ${{ fromJson(needs.release-please.outputs.TARGET_ENV).number}} --auto --merge
    develop: 
        needs: release-please
        runs-on: ubuntu-latest
        if: ${{ needs.release-please.outputs.TARGET_ENV == null }}  
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Check diff
              run: git diff --name-only origin/main origin/develop
            - name: Merge  
              run: |
                 git checkout develop
                 git merge main --commit
                 git push
            - name: Delete branch
              run: git push origin --delete release-please--branches--main  
            - name: Create branch from develop
              run: |
                git checkout develop
                git checkout -b myFeature develop
                touch filename.txt
                git log --pretty="- %s" > filename.txt
                cat filename.txt
                git add filename.txt
                git config --local user.name github-actions
                git config --local user.email "github-actions@github.com"
                ls
                git status
                git commit --message "Prepare stage redeploy"
                git push --set-upstream origin myFeature
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0    
            - name: Create pull request into develop
              uses: peter-evans/create-pull-request@v4
              id: cprdev
              with:
                token: ${{ secrets.PAT }}
                branch: myFeature
                base: develop
                title: 'feat: Recreate stage'
                labels: |
                    develop
                    automated pr
                body: |
                    Hi!
                    This PR was created in response workflow running to release.        
            